/*
 * Copyright (c) 2023 General Motors GTO LLC
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-FileType: SOURCE
 * SPDX-FileCopyrightText: 2023 General Motors GTO LLC
 * SPDX-License-Identifier: Apache-2.0
 */
 syntax = "proto3";

 package uprotocol.v1;

 import "uattributes.proto";
 import "upayload.proto";
 import "uri.proto";

 option java_package = "org.eclipse.uprotocol.v1";
 option java_outer_classname = "UMessageProto";
 option java_multiple_files = true;

// UMessage is the top-level message type for the uProtocol.
// It contains a UUri, UAttributes, and UPayload and is a way of representing a 
// message that would be sent between two uEs.
message UMessage {
    // The source (address) of the message. For published events this is the producers publish topic
    // for requests it is the calling uE respose topic (who sent the request). For responses this is the
    // method URI from the uService
    UUri source = 1;

    // uProtocol mandatory and optional attributes
    UAttributes attributes = 2;

    // Optional message payload containing the data to be sent
    UPayload payload = 3;
}