/*
 * Copyright (c) 2023 General Motors GTO LLC
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
syntax = "proto3";

package uprotocol.v1.core.utwin.v1;

import "google/rpc/status.proto";
import "options.proto";
import "uri.proto";
import "spec.proto"; // CloudEvents proto

option java_package = "org.eclipse.uprotocol.v1.core.utwin.v1";
option java_outer_classname = "UTwinProto";
option java_multiple_files = true;

// uTwin Service interface definition
service uTwin {
  option (name) = "core.utwin"; // Service name
  option (version_major) = 1;
  option (version_minor) = 1;
  option (id) = 26;

  // A uE calls this API to retrieve the last event for a given set of topics.<br>
  // What is returned is a list of EventResponse with the status for event retreival
  // and the event itself if uTwin was able to fetch it. uTwin will also return 
  // status for those events that it was unable to fetch (i.e. due to NOT_FOUND 
  // or PERMISSION_DENIED.<br>
  rpc GetLastEvents(UUriBatch) returns (GetLastEventsResponse) {
    option (method_id) = 1;
  }

  // A call to SetLastEvent (typically from uBus) sets the uTwin internal cache 
  // as follows: a pair (topic, event) for future retrieval based on topic as
  // the primary key to retrieve an event:
  // - topic is set to CloudEvent.source
  // - event is set to CloudEvent
  // Return value status.Code is one of:
  // - OK if CE was successfully stored in uTwin
  // - INVALID argument if uTwin encountered an issue with CE content (source field in particular) 
  // - PERMISSION_DENIED if requesting uE does not have permission to access the Topic
  // - RESOURCE_EXHAUSTED if uTwin has no more memory available to store new CEs
  rpc SetLastEvent(io.cloudevents.v1.CloudEvent) returns (google.rpc.Status) {
    option (method_id) = 2;
  }

}


// Response Event that contains the status and event per topic
message GetLastEventResponse {
  // Topic that was requested to be fetched
  UUri topic = 1;

  // Status (success or not) when fetching the last event for said topic
  google.rpc.Status status = 2;

  // Event when the topic has been fetched successfully, otherwise empty
  io.cloudevents.v1.CloudEvent event = 3;
}


// Message returned by the rpc GetLastEvents.
message GetLastEventsResponse {
  // List of one or more events and the results for fetching that topic
  repeated GetLastEventResponse responses = 2;
}
